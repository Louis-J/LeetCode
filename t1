+++++++++++++++++++++++++++++++++++++++++++++Pat3985+++++++++++++++++++++++++++++++++++++++++++++
#include <iostream>
#include <string>
#include <set>

using namespace std;

int main()
{
    bool ifFib[101]={false};
    ifFib[1]=true;
    for(int i=1,j=2;j<101;j+=i,i=j-i){
        ifFib[j]=true;
    }
    string LUCKY;
    cin >> LUCKY;
    set<string> alls;
    for(int i = 0; i < LUCKY.size(); i ++){
        int sum=0;
        bool stat[26]={false};
        for(int j = i; j < LUCKY.size(); j ++){
            string temp(LUCKY.substr(i, j-i+1));
            if(stat[temp[j-i]-'a']==false){
                sum++;
                stat[temp[j-i]-'a']=true;
            }
            if(ifFib[sum]){
                alls.insert(temp);
            }
        }
    }
    for(set<string>::iterator i = alls.begin(); i != alls.end(); i ++){
        cout << *i << endl;
    }
    return 0;
}
---------------------------------------------Pat3985---------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++Pat3986+++++++++++++++++++++++++++++++++++++++++++++
#include <iostream>
#include <string>
#include <set>

using namespace std;

bool IfLeagle_char(unsigned char thisnum, unsigned char lastnum)
{
    thisnum -= '0';
    lastnum -= '0';

    if(lastnum==0){
        return thisnum==0;
    }
    else if(thisnum==0){
        return lastnum%3!=0;
    }
    else{
        return (thisnum-1)%3>=(lastnum-1)%3 && (thisnum-1)/3>=(lastnum-1)/3;
    }
}

bool LeagleMax_Num(unsigned int wei,string& K)
{
    if(wei == K.size()){
        return true;
    }
    unsigned char thisWei = K[wei];
    unsigned char lastWei = wei == 0? '1': K[wei-1];

    for(; K[wei] >= '0'; K[wei] --){
        if(IfLeagle_char(K[wei],lastWei)){
            if(K[wei] == thisWei){
                if(LeagleMax_Num(wei + 1, K)){
                    return true;
                }
            }else{
                if(K[wei] == '0'){
                    K.replace(wei +1, K.size()-wei-1, K.size()-wei-1, '0');
                    return true;
                }
                else{
                    K.replace(wei +1, K.size()-wei-1, K.size()-wei-1, '9');
                    return true;
                }
            }
        }
    }
    return false;
}

int main()
{
    int N;
    for(cin >> N; N --;){
        string K;
        cin >> K;
        LeagleMax_Num(0, K);
        cout << K << endl;
    }
    return 0;
}
---------------------------------------------Pat3986---------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++Pat3987+++++++++++++++++++++++++++++++++++++++++++++
#include <iostream>
#include <string>
#include <vector>
#include <set>

using namespace std;

int main()
{
    int N, K;
    while(cin >> N >> K){
        vector<vector<int>> survey(N,vector<int>(K+1));
        vector<int> stat(K+1);

        for(int i = 0; i < N; i ++){
            for(int j = 0; j <= K; j ++){
                int temp=0;
                cin>>temp;
                survey[i][temp]=j;
            }
        }
        int dftVote = 0;
        for(int j = K; j > 0; j --){
            for(int i = 0; i < N; i ++){
                if(survey[i][j] < survey[i][dftVote]){
                    stat[j] ++;
                }
            }
            if(stat[j] > N/2){
                dftVote = j;
            }
        }
        if(dftVote == 0){
            cout << "otaku" << endl;
        }
        else{
            cout << dftVote << endl;
        }
    }
    return 0;
}
---------------------------------------------Pat3987---------------------------------------------
